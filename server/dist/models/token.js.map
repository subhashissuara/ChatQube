{"version":3,"sources":["../../src/models/token.js"],"names":["Token","app","tokens","OrderedMap","token","Promise","resolve","reject","tokenId","_","toString","_id","remove","db","collection","deleteOne","ObjectId","err","info","id","load","then","userId","models","user","catch","tokenFromCache","get","findTokenById","set","callback","idObject","query","findOne","result","message","expireTime","created","Date","expired","insertOne"],"mappings":"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","file":"token.js","sourcesContent":["import _ from 'lodash';\r\nimport {ObjectId} from 'mongodb';\r\nimport {OrderedMap} from 'immutable';\r\n\r\nclass Token{\r\n    constructor(app){\r\n        this.app = app;\r\n        this.tokens = new OrderedMap();\r\n    }\r\n\r\n    logout(token){\r\n        return new Promise((resolve, reject) => {\r\n            const tokenId = _.toString(token._id);\r\n\r\n            // Remove token from cache\r\n            this.tokens = this.tokens.remove(tokenId);\r\n\r\n            // Delete token from DB\r\n            this.app.db.collection('tokens').deleteOne({\r\n                _id: new ObjectId(tokenId)\r\n            }, (err, info) => {\r\n                return err ? reject(err) : resolve(info);\r\n            });\r\n        })\r\n    }\r\n\r\n    loadUserByTokenId(id){\r\n        return new Promise((resolve, reject) => {\r\n            this.load(id).then((token) => {\r\n                const userId = `${token.userId}`;\r\n                this.app.models.user.load(userId).then((user) => {\r\n                    token.user = user;\r\n                    return resolve(token);\r\n                }).catch((err) => {\r\n                    return reject(err);\r\n                })\r\n            }).catch((err) => {\r\n                return reject(err);\r\n            })\r\n        })\r\n    }\r\n\r\n    load(id = null){\r\n        id = `${id}`\r\n        return new Promise((resolve, reject) => {\r\n\r\n            // Checking cache for token\r\n            const tokenFromCache = this.tokens.get(id);\r\n            if(tokenFromCache){\r\n                return resolve(tokenFromCache);\r\n            }\r\n\r\n            this.findTokenById(id, (err, token) => {\r\n                if(!err && token){\r\n                    const tokenId = `${token._id}`;\r\n                    this.tokens = this.tokens.set(id, token);\r\n                }\r\n                return err ? reject(err) : resolve(token);\r\n            })\r\n        })\r\n    }\r\n\r\n    findTokenById(id, callback = () => {}){\r\n        const idObject = new ObjectId(id);\r\n        const query = {_id: idObject};\r\n        this.app.db.collection('tokens').findOne(query, (err, result) => {\r\n            if(err || !result){\r\n                return callback({message: \"Not Found!\"}, null);\r\n            }\r\n\r\n            return callback(null, result);\r\n        })\r\n    }\r\n\r\n    create(userId){\r\n        const expireTime = null;\r\n        const token = {\r\n            userId: userId,\r\n            created: new Date(),\r\n            expired: null,\r\n        }\r\n        \r\n        return new Promise((resolve, reject) => {\r\n            this.app.db.collection('tokens').insertOne(token, (err, info) => {\r\n                return err ? reject(err) : resolve(token);\r\n            })\r\n        })\r\n    }\r\n}\r\n\r\nexport default Token;"]}