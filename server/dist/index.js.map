{"version":3,"sources":["../src/index.js"],"names":["PORT","app","server","http","createServer","wsServer","WebSocket","Server","use","exposedHeaders","bodyParser","json","limit","wwwPath","path","join","__dirname","express","static","Database","connect","then","db","console","log","catch","err","models","Model","routers","AppRouter","listen","process","env","address","port"],"mappings":";;;;;;AAAA;;;;AACA;;;;AACA;;;;AACA;;;;AACA;;;;AACA;;;;AACA;;;;AACA;;;;AACA;;;;AACA;;;;AACA;;;;;;AAEA,IAAMA,OAAO,IAAb;AACA,IAAMC,MAAM,wBAAZ;;AAEA;AACA;AACA;AACA;AACA;AACAA,IAAIC,MAAJ,GAAaC,eAAKC,YAAL,CAAkBH,GAAlB,CAAb;;AAEAA,IAAII,QAAJ,GAAe,IAAIC,aAAUC,MAAd,CAAqB,EAAEL,QAAQD,IAAIC,MAAd,EAArB,CAAf;;AAEAD,IAAIO,GAAJ,CACE,oBAAK;AACHC,kBAAgB;AADb,CAAL,CADF;AAKA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEAR,IAAIO,GAAJ,CACEE,qBAAWC,IAAX,CAAgB;AACdC,SAAO;AADO,CAAhB,CADF;;AAMA;AACA,IAAMC,UAAUC,eAAKC,IAAL,CAAUC,SAAV,EAAqB,KAArB,CAAhB;AACAf,IAAIO,GAAJ,CAAQ,GAAR,EAAaS,kBAAQC,MAAR,CAAeL,OAAf,CAAb;;AAEA;AACA,IAAIM,uBAAJ,GACGC,OADH,GAEGC,IAFH,CAEQ,UAACC,EAAD,EAAQ;AACZC,UAAQC,GAAR,CAAY,kBAAZ;AACAvB,MAAIqB,EAAJ,GAASA,EAAT;AACD,CALH,EAMGG,KANH,CAMS,UAACC,GAAD,EAAS;AACd,QAAMA,GAAN;AACD,CARH;;AAUAzB,IAAI0B,MAAJ,GAAa,IAAIC,gBAAJ,CAAU3B,GAAV,CAAb;AACAA,IAAI4B,OAAJ,GAAc,IAAIC,mBAAJ,CAAc7B,GAAd,CAAd;;AAEAA,IAAIC,MAAJ,CAAW6B,MAAX,CAAkBC,QAAQC,GAAR,CAAYjC,IAAZ,IAAoBA,IAAtC,EAA4C,YAAM;AAChDuB,UAAQC,GAAR,6BAAsCvB,IAAIC,MAAJ,CAAWgC,OAAX,GAAqBC,IAA3D;AACD,CAFD;;kBAIelC,G","file":"index.js","sourcesContent":["import http from \"http\";\r\nimport https from \"https\";\r\nimport express from \"express\";\r\nimport cors from \"cors\";\r\nimport bodyParser from \"body-parser\";\r\nimport path from \"path\";\r\nimport fs from \"fs\";\r\nimport WebSocket from \"ws\";\r\nimport AppRouter from \"./AppRouter\";\r\nimport Model from \"./models\";\r\nimport Database from \"./mongoDBClient\";\r\n\r\nconst PORT = 3001;\r\nconst app = express();\r\n\r\n// app.server = https.createServer({\r\n//     key: fs.readFileSync('/etc/letsencrypt/live/chatqube.subhashissuara.tech/privkey.pem'),\r\n//     cert: fs.readFileSync('/etc/letsencrypt/live/chatqube.subhashissuara.tech/cert.pem'),\r\n//     ca: fs.readFileSync('/etc/letsencrypt/live/chatqube.subhashissuara.tech/chain.pem'),\r\n//   }, app);\r\napp.server = http.createServer(app);\r\n\r\napp.wsServer = new WebSocket.Server({ server: app.server });\r\n\r\napp.use(\r\n  cors({\r\n    exposedHeaders: \"*\",\r\n  })\r\n);\r\n// app.use(cors({\r\n//     'allowedHeaders': ['Content-Type'], // headers that React is sending to the API\r\n//     'exposedHeaders': ['Content-Type'], // headers that you are sending back to React\r\n//     'origin': '*',\r\n//     'methods': 'GET,HEAD,PUT,PATCH,POST,DELETE',\r\n//     'preflightContinue': false\r\n// }));\r\n\r\napp.use(\r\n  bodyParser.json({\r\n    limit: \"50mb\",\r\n  })\r\n);\r\n\r\n// Serving ReactJS\r\nconst wwwPath = path.join(__dirname, \"www\");\r\napp.use(\"/\", express.static(wwwPath));\r\n\r\n// Connection to MongoDB\r\nnew Database()\r\n  .connect()\r\n  .then((db) => {\r\n    console.log(\"Connected to DB!\");\r\n    app.db = db;\r\n  })\r\n  .catch((err) => {\r\n    throw err;\r\n  });\r\n\r\napp.models = new Model(app);\r\napp.routers = new AppRouter(app);\r\n\r\napp.server.listen(process.env.PORT || PORT, () => {\r\n  console.log(`App is running on port ${app.server.address().port}`);\r\n});\r\n\r\nexport default app;\r\n"]}