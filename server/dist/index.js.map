{"version":3,"sources":["../src/index.js"],"names":["PORT","app","server","https","createServer","key","fs","readFileSync","cert","ca","wsServer","WebSocket","Server","use","exposedHeaders","bodyParser","json","limit","wwwPath","path","join","__dirname","express","static","Database","connect","then","db","console","log","catch","err","models","Model","routers","AppRouter","listen","process","env","address","port"],"mappings":";;;;;;AAAA;;;;AACA;;;;AACA;;;;AACA;;;;AACA;;;;AACA;;;;AACA;;;;AACA;;;;AACA;;;;AACA;;;;AACA;;;;;;AAEA,IAAMA,OAAO,IAAb;AACA,IAAMC,MAAM,wBAAZ;;AAEAA,IAAIC,MAAJ,GAAaC,gBAAMC,YAAN,CAAmB;AAC5BC,SAAKC,aAAGC,YAAH,CAAgB,gEAAhB,CADuB;AAE5BC,UAAMF,aAAGC,YAAH,CAAgB,6DAAhB,CAFsB;AAG5BE,QAAIH,aAAGC,YAAH,CAAgB,8DAAhB;AAHwB,CAAnB,EAIRN,GAJQ,CAAb;AAKA;;AAEAA,IAAIS,QAAJ,GAAe,IAAIC,aAAUC,MAAd,CAAqB,EAACV,QAAQD,IAAIC,MAAb,EAArB,CAAf;;AAEAD,IAAIY,GAAJ,CAAQ,oBAAK;AACTC,oBAAgB;AADP,CAAL,CAAR;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEAb,IAAIY,GAAJ,CAAQE,qBAAWC,IAAX,CAAgB;AACpBC,WAAO;AADa,CAAhB,CAAR;;AAIA;AACA,IAAMC,UAAUC,eAAKC,IAAL,CAAUC,SAAV,EAAqB,KAArB,CAAhB;AACApB,IAAIY,GAAJ,CAAQ,GAAR,EAAaS,kBAAQC,MAAR,CAAeL,OAAf,CAAb;;AAEA;AACA,IAAIM,uBAAJ,GAAeC,OAAf,GAAyBC,IAAzB,CAA8B,UAACC,EAAD,EAAQ;AAClCC,YAAQC,GAAR,CAAY,kBAAZ;AACA5B,QAAI0B,EAAJ,GAASA,EAAT;AACH,CAHD,EAGGG,KAHH,CAGS,UAACC,GAAD,EAAS;AACd,UAAMA,GAAN;AACH,CALD;;AAOA9B,IAAI+B,MAAJ,GAAa,IAAIC,gBAAJ,CAAUhC,GAAV,CAAb;AACAA,IAAIiC,OAAJ,GAAc,IAAIC,mBAAJ,CAAclC,GAAd,CAAd;;AAEAA,IAAIC,MAAJ,CAAWkC,MAAX,CAAkBC,QAAQC,GAAR,CAAYtC,IAAZ,IAAoBA,IAAtC,EAA4C,YAAM;AAC1C4B,YAAQC,GAAR,6BAAsC5B,IAAIC,MAAJ,CAAWqC,OAAX,GAAqBC,IAA3D;AACP,CAFD;;kBAIevC,G","file":"index.js","sourcesContent":["import http from 'http';\r\nimport https from 'https';\r\nimport express from 'express';\r\nimport cors from 'cors';\r\nimport bodyParser from 'body-parser';\r\nimport path from 'path';\r\nimport fs from 'fs';\r\nimport WebSocket from 'ws';\r\nimport AppRouter from './AppRouter';\r\nimport Model from './models';\r\nimport Database from './mongoDBClient';\r\n\r\nconst PORT = 3001;\r\nconst app = express();\r\n\r\napp.server = https.createServer({\r\n    key: fs.readFileSync('/etc/letsencrypt/live/chatqube.subhashissuara.tech/privkey.pem'),\r\n    cert: fs.readFileSync('/etc/letsencrypt/live/chatqube.subhashissuara.tech/cert.pem'),\r\n    ca: fs.readFileSync('/etc/letsencrypt/live/chatqube.subhashissuara.tech/chain.pem'),\r\n  }, app);\r\n// app.server = http.createServer(app);\r\n\r\napp.wsServer = new WebSocket.Server({server: app.server});\r\n\r\napp.use(cors({\r\n    exposedHeaders: \"*\"\r\n}));\r\n// app.use(cors({\r\n//     'allowedHeaders': ['Content-Type'], // headers that React is sending to the API\r\n//     'exposedHeaders': ['Content-Type'], // headers that you are sending back to React\r\n//     'origin': '*',\r\n//     'methods': 'GET,HEAD,PUT,PATCH,POST,DELETE',\r\n//     'preflightContinue': false\r\n// }));\r\n\r\napp.use(bodyParser.json({\r\n    limit: '50mb'\r\n}));\r\n\r\n// Serving ReactJS\r\nconst wwwPath = path.join(__dirname, 'www');\r\napp.use('/', express.static(wwwPath));\r\n\r\n// Connection to MongoDB\r\nnew Database().connect().then((db) => {\r\n    console.log(\"Connected to DB!\");\r\n    app.db = db;\r\n}).catch((err) => {\r\n    throw(err);\r\n})\r\n\r\napp.models = new Model(app);\r\napp.routers = new AppRouter(app);\r\n\r\napp.server.listen(process.env.PORT || PORT, () => {\r\n        console.log(`App is running on port ${app.server.address().port}`);\r\n});\r\n\r\nexport default app;"]}